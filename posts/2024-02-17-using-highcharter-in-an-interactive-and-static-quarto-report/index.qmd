---
title: "Using Highcharter in an Interactive and Static Quarto Report"
description: "Displaying interactive and static charts in different quarto report formats: .html, .pdf, and docx (word document)"
author: "Eli Nimy"
date: "2024-02-17"
categories: [data visualisation, data analysis, r, quarto, code]
image: preview.jpg
number-sections: true
format: 
  html:
    toc: true
---

Generating reports with Highcharter charts in R can pose challenges when the output format needs to be in .pdf or .docx. However, there's a straightforward workaround available. You can download the chart and then paste it into either a PowerPoint or Word document. If needed, you can convert the document to a .pdf format afterward.

To enable downloading options, you can use the `hc_exporting(...)` function:

``` r
highcharter_chart_object |> 
  hc_exporting(enabled = TRUE)
```

The `highcharter_chart_object` represents a highcharter chart.

Download options provided by enabling exporting:

![](download-options.png)

In this post, we will explore another workaround using the [webshot2](https://rstudio.github.io/webshot2/) and [htmlwidgets](https://www.htmlwidgets.org/) packages. This method enables you to work exclusively within R without the need to download or take screenshots of charts for pasting into other documents.

::: callout-note
To learn more about the YAML Quarto code chunk options used in this post, you can refer to the [Quarto Chuck Options](https://r4ds.hadley.nz/quarto#chunk-options) section in the [R for Data Science (2e)](https://r4ds.hadley.nz/) online book.
:::

### Package Use-case and Installation

**Tidyverse** will be used for data manipulation

``` r
install.packages("tidyverse")
```

**Highcharter** will be used to create an interactive chart

``` r
install.packages("highcharter")
```

**Htmlwidgets** will used to save the interactive chart to an .html file

``` r
install.packages("htmlwidgets")
```

**Webshot2** will be used to take a screenshot of the saved interactive chart (.html file). The screenshot can be saved as an .png, .jpeg, or .pdf.

``` r
install.packages("webshot2")
```

### Dataset

The line chart generated using Highcharter, showcased in the reports within the subsequent sections, provides insights derived from the vaccines dataset.

::: {.callout-note collapse="true"}
## Expand To Learn More About the vaccines Dataset

**vaccines** is a highcharter dataset that contains the number of infected people by Measles, measured over 70-some years and across all 50 states. From the WSJ analysis: <http://graphics.wsj.com/infectious-diseases-and-vaccines/>

**Format** - A data frame with 3,876 observations and 3 variables.

-   `year`- year
-   `state` - name of the state
-   `count` - number of cases per 100,000 people. If the value is NA the count was 0

**View vaccines dataset**

```{r}
#| echo: true
#| message: false
#| warning: false

library(highcharter)
vaccines
```
:::

### .pdf Quarto Report {#sec-pdf-quarto-report}

The following code produces a .pdf report, accomplished by setting the output format to PDF using `format: pdf`. The `delay` argument specifies the time to wait before taking a screenshot, in seconds. It is advisable to set a longer delay to ensure all assets display properly.

::: callout-note
To generate a PDF format report, a **LaTeX** installation is necessary. To ensure smooth output of a .pdf report, please install TinyTeX by executing the following command in your Terminal:

``` {.bash filename="Terminal"}
quarto install tinytex
```
:::

::: panel-tabset
## Code

``` yaml
---
title: "Measles Infected Cases"
author: "E-tech Blog"
date: "2024-02-17"
format: pdf
execute:
  echo: false
  warning: false
---
```

``` r
library(tidyverse) 
library(highcharter)
library(webshot2)
library(htmlwidgets)

measles_infected_cases <- vaccines |> 
  filter(state %in% c("Florida", "California")) |> 
  mutate(count = ifelse(is.na(count), 0, count)) |> 
  hchart("line", hcaes(x = year, y = count, group = state)) |> 
  hc_xAxis(title = list(text = "Year")) |>  
  hc_yAxis(title = list(text = "Number of cases per 100k people")) |>  
  hc_title(text = list("Measles Infected Cases per 100k People 
                       in Florida & California")) |> 
  hc_colors(c("#dc3545", "#5c6f7e")) |> 
  hc_exporting(enabled = FALSE) |> 
  hc_add_theme(hc_theme(chart = list(backgroundColor = "white")))

saveWidget(widget = measles_infected_cases,
           file = "measles_infected_cases_chart.html")
webshot(url = "measles_infected_cases_chart.html",
        file = "measles_infector_cases_chart.jpeg",
        delay = 2)
```

## R Studio Code Screenshot

![](rstudio-pdf-report-code-snippet.png)
:::

**The above code produces the following report:**

![](pdf_report.png)

### .docx Quarto Report

The .docx Quarto report can be produced by replacing `format: pdf` with `format: docx` in the code provided in @sec-pdf-quarto-report.

::: callout-note
Viewing Word documents necessitates the installation of MS Word (or Libre/Open Office on Linux).
:::

**The .docx format will produce the following report:**

![](docx_report.png)

### .html Quarto Report

The following code produces an .html report. This is achieved by setting the output format to HTML using `format: html`.

::: panel-tabset
## Code

``` yaml
---
title: "Measles Infected Cases"
author: "E-tech Blog"
date: "2024-02-17"
format: html
execute:
  echo: false
  warning: false
---
```

``` r
library(tidyverse) 
library(highcharter)

measles_infected_cases <- vaccines |> 
  filter(state %in% c("Florida", "California")) |> 
  mutate(count = ifelse(is.na(count), 0, count)) |> 
  hchart("line", hcaes(x = year, y = count, group = state)) |> 
  hc_xAxis(title = list(text = "Year")) |>  
  hc_yAxis(title = list(text = "Number of cases per 100k people")) |>  
  hc_title(text = list("Measles Infected Cases per 100k People 
                       in Florida & California")) |> 
  hc_colors(c("#dc3545", "#5c6f7e")) |> 
  hc_exporting(enabled = TRUE) |> 
  hc_add_theme(hc_theme(chart = list(backgroundColor = "white")))

measles_infected_cases
```

## R Studio Code Screenshot

![](rstudio-html-report-code-snippet.png)
:::

**The above code produces the following report:**

![](html_report.png)

### Sejda .html to PDF

Alternatively, the [Sejda HTML to PDF](https://www.sejda.com/html-to-pdf) converter can be used to quickly convert a .html format report to a .pdf report.

![](sedja-html-to-pdf-converter.png)

::: {.callout-note appearance="simple"}
## Thank you for following along

Your friendly neighborhood data scientist
:::
